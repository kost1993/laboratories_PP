Параллельное программирование
Лабараторная 01
Вычисление хешсуммы: log(b[0])^log(b[1])^...^log(b[i])^...
где b[i] - i-ые 8 байт из считываемого файла
log(b[i]) домножается на 10, чтобы заполнить все 4 байта переменной типа
unsigned long long int
В checsum.c:
-попытка реализации хешсуммы. Считывание по 8 байт из буфера, и передача их
  потокам, в потоках вычисляются логарифмы, вычисляется локальная хешсумма
  и потом локальные хешсуммы через глобальную переменную XOR-ятся.

В math_alt.c:
-exp_alt_core - функция экспонента через ряд Тейлора
-exp_alt - подготавливает число для функции выше, т.е. приводит к виду
  x = x * rank, чтобы вычислить экспоненту для малого x (0 <= x <= 2),
  и потом возвести ее в rank степень. rank - целочисленное число (2*2*...),
  при этом для отрицательных x экспонента считается как 1 / exp (-x) из-за
  расхождения ряда Тейлора.
-pow_alt - тест
-pow_d_i_alt - простая реализация возведения double в целочисленную степень
-pow_i_i_alt - тоже самое, но возведение long long int числа.
-lli_min - самое минимальное число, которое может поместиться в формат
  long long int
-lli_max - самое максимальное число, которое может поместиться в формат
  long long int
-M_E_alt - число e
-ln_alt_core - функция логарифма через ряд Тейлора
-ln_alt - подготавливает число для функции выше, т.е. приводит к виду
  ln(x) = ln(x/e) + 1, до тех пор, пока не станет x/e <= 2
 
В string_alt.c:
-bytestoint - переводит строку из чар символов в число.
-inttibytes - наоборот (или по другому представление числа в 16-ом формате 
  и занесение его в строку символов).
